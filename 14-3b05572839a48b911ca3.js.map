{"version":3,"sources":["webpack:///./node_modules/semantic-ui-react/dist/es/modules/Sticky/Sticky.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Input/Input.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Divider/Divider.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Placeholder/PlaceholderHeader.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Placeholder/PlaceholderImage.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Placeholder/PlaceholderLine.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Placeholder/PlaceholderParagraph.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Placeholder/Placeholder.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Button/ButtonContent.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Button/ButtonGroup.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Button/ButtonOr.js","webpack:///./node_modules/semantic-ui-react/dist/es/elements/Button/Button.js"],"names":["__webpack_require__","d","__webpack_exports__","Sticky","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","n","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_1___default","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__","_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3___default","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6___default","_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_7__","_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_7___default","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8__","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_8___default","lodash_invoke__WEBPACK_IMPORTED_MODULE_9__","lodash_invoke__WEBPACK_IMPORTED_MODULE_9___default","classnames__WEBPACK_IMPORTED_MODULE_10__","classnames__WEBPACK_IMPORTED_MODULE_10___default","react__WEBPACK_IMPORTED_MODULE_12__","react__WEBPACK_IMPORTED_MODULE_12___default","_lib__WEBPACK_IMPORTED_MODULE_13__","_lib__WEBPACK_IMPORTED_MODULE_14__","_lib__WEBPACK_IMPORTED_MODULE_15__","_lib__WEBPACK_IMPORTED_MODULE_16__","_lib__WEBPACK_IMPORTED_MODULE_17__","_Component","_getPrototypeOf2","_this","this","_len","arguments","length","args","Array","_key","call","apply","concat","sticky","Object","props","scrollContext","scrollContextNode","current","sub","handleUpdate","target","unsub","e","pushing","state","ticking","assignRects","didReachStartingPoint","stickToContextTop","didTouchScreenBottom","stickToScreenBottom","stickToContextBottom","isOversized","contextRect","top","bottom","window","innerHeight","didTouchScreenTop","didReachContextBottom","stickToScreenTop","frameId","requestAnimationFrame","update","context","contextNode","document","body","triggerRect","triggerRef","getBoundingClientRect","stickyRect","stickyRef","offset","height","bottomOffset","setState","bound","stick","unstick","key","value","active","addListeners","nextProps","_this$props","currentScrollContext","next","nextScrollContext","removeListeners","cancelAnimationFrame","styleElement","_this$state","undefined","width","_this$props2","children","className","_this$state2","rest","ElementType","containerClasses","elementClasses","triggerStyles","a","createElement","ref","style","computeStyle","propTypes","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_2__","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3___default","_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4__","_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4___default","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7___default","_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_8__","_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_8___default","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9__","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_9___default","lodash_includes__WEBPACK_IMPORTED_MODULE_10__","lodash_includes__WEBPACK_IMPORTED_MODULE_10___default","lodash_map__WEBPACK_IMPORTED_MODULE_11__","lodash_map__WEBPACK_IMPORTED_MODULE_11___default","lodash_invoke__WEBPACK_IMPORTED_MODULE_12__","lodash_invoke__WEBPACK_IMPORTED_MODULE_12___default","lodash_get__WEBPACK_IMPORTED_MODULE_13__","lodash_get__WEBPACK_IMPORTED_MODULE_13___default","lodash_isNil__WEBPACK_IMPORTED_MODULE_14__","lodash_isNil__WEBPACK_IMPORTED_MODULE_14___default","classnames__WEBPACK_IMPORTED_MODULE_15__","classnames__WEBPACK_IMPORTED_MODULE_15___default","react__WEBPACK_IMPORTED_MODULE_17__","react__WEBPACK_IMPORTED_MODULE_17___default","_lib__WEBPACK_IMPORTED_MODULE_18__","_lib__WEBPACK_IMPORTED_MODULE_19__","_lib__WEBPACK_IMPORTED_MODULE_20__","_lib__WEBPACK_IMPORTED_MODULE_21__","_lib__WEBPACK_IMPORTED_MODULE_22__","_lib__WEBPACK_IMPORTED_MODULE_23__","_lib__WEBPACK_IMPORTED_MODULE_24__","_Button__WEBPACK_IMPORTED_MODULE_25__","_Icon__WEBPACK_IMPORTED_MODULE_26__","_Label__WEBPACK_IMPORTED_MODULE_27__","Input","loading","icon","disabled","tabIndex","inputRef","focus","select","child","defaultProps","c","_this$props3","type","computeTabIndex","unhandled","_partitionHTMLProps","_partitionHTMLProps2","htmlInputProps","onChange","handleChange","_this2","_this$props4","action","actionPosition","error","fluid","iconPosition","input","inverted","label","labelPosition","size","transparent","classes","_this$partitionProps","partitionProps","_this$partitionProps2","isNil","childElements","toArray","handleChildOverrides","actionElement","create","autoGenerateKey","labelElement","computeIcon","classnames__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","_lib__WEBPACK_IMPORTED_MODULE_4__","_lib__WEBPACK_IMPORTED_MODULE_5__","_lib__WEBPACK_IMPORTED_MODULE_6__","_lib__WEBPACK_IMPORTED_MODULE_7__","Divider","clearing","content","fitted","hidden","horizontal","section","vertical","handledProps","PlaceholderHeader","image","classnames_default","classNameBuilders","getUnhandledProps","getElementType","react_default","extends_default","lib","Placeholder_PlaceholderHeader","PlaceholderImage","square","rectangular","Placeholder_PlaceholderImage","PlaceholderLine","Placeholder_PlaceholderLine","PlaceholderParagraph","Placeholder_PlaceholderParagraph","Placeholder","Header","Image","Line","Paragraph","ButtonContent","visible","Button_ButtonContent","ButtonGroup","attached","basic","buttons","color","compact","floated","labeled","negative","positive","primary","secondary","toggle","widths","isNil_default","map_default","button","elements_Button_Button","Button_ButtonGroup","ButtonOr","text","data-text","Button_ButtonOr","Button_Button","Button","classCallCheck_default","possibleConstructorReturn_default","getPrototypeOf_default","defineProperty_default","assertThisInitialized_default","react","invoke_default","preventDefault","inherits_default","createClass_default","role","animated","circular","baseClasses","hasIconClass","labeledClasses","wrapperClasses","computeElementType","buttonClasses","Label","pointing","onClick","handleClick","Ref","innerRef","aria-pressed","Icon","hasChildren","computeButtonAriaRole","as","factories"],"mappings":"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","file":"14-3b05572839a48b911ca3.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _invoke from \"lodash/invoke\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component, createRef } from 'react';\nimport { customPropTypes, eventStack, getElementType, getUnhandledProps, isBrowser, isRefObject } from '../../lib';\n/**\n * Sticky content stays fixed to the browser viewport while another column of content is visible on the page.\n */\n\nvar Sticky =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Sticky, _Component);\n\n  function Sticky() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Sticky);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Sticky)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      sticky: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"stickyRef\", createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"triggerRef\", createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"addListeners\", function (props) {\n      var scrollContext = props.scrollContext;\n      var scrollContextNode = isRefObject(scrollContext) ? scrollContext.current : scrollContext;\n\n      if (scrollContextNode) {\n        eventStack.sub('resize', _this.handleUpdate, {\n          target: scrollContextNode\n        });\n        eventStack.sub('scroll', _this.handleUpdate, {\n          target: scrollContextNode\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"removeListeners\", function () {\n      var scrollContext = _this.props.scrollContext;\n      var scrollContextNode = isRefObject(scrollContext) ? scrollContext.current : scrollContext;\n\n      if (scrollContextNode) {\n        eventStack.unsub('resize', _this.handleUpdate, {\n          target: scrollContextNode\n        });\n        eventStack.unsub('scroll', _this.handleUpdate, {\n          target: scrollContextNode\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"update\", function (e) {\n      var pushing = _this.state.pushing;\n      _this.ticking = false;\n\n      _this.assignRects();\n\n      if (pushing) {\n        if (_this.didReachStartingPoint()) return _this.stickToContextTop(e);\n        if (_this.didTouchScreenBottom()) return _this.stickToScreenBottom(e);\n        return _this.stickToContextBottom(e);\n      }\n\n      if (_this.isOversized()) {\n        if (_this.contextRect.top > 0) return _this.stickToContextTop(e);\n        if (_this.contextRect.bottom < window.innerHeight) return _this.stickToContextBottom(e);\n      }\n\n      if (_this.didTouchScreenTop()) {\n        if (_this.didReachContextBottom()) return _this.stickToContextBottom(e);\n        return _this.stickToScreenTop(e);\n      }\n\n      return _this.stickToContextTop(e);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleUpdate\", function (e) {\n      if (!_this.ticking) {\n        _this.ticking = true;\n        _this.frameId = requestAnimationFrame(function () {\n          return _this.update(e);\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"assignRects\", function () {\n      var context = _this.props.context;\n      var contextNode = isRefObject(context) ? context.current : context || document.body;\n      _this.triggerRect = _this.triggerRef.current.getBoundingClientRect();\n      _this.contextRect = contextNode.getBoundingClientRect();\n      _this.stickyRect = _this.stickyRef.current.getBoundingClientRect();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"didReachContextBottom\", function () {\n      var offset = _this.props.offset;\n      return _this.stickyRect.height + offset >= _this.contextRect.bottom;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"didReachStartingPoint\", function () {\n      return _this.stickyRect.top <= _this.triggerRect.top;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"didTouchScreenTop\", function () {\n      return _this.triggerRect.top < _this.props.offset;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"didTouchScreenBottom\", function () {\n      var bottomOffset = _this.props.bottomOffset;\n      return _this.contextRect.bottom + bottomOffset > window.innerHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"isOversized\", function () {\n      return _this.stickyRect.height > window.innerHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"pushing\", function (pushing) {\n      var possible = _this.props.pushing;\n      if (possible) _this.setState({\n        pushing: pushing\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"stick\", function (e, bound) {\n      _this.setState({\n        bound: bound,\n        sticky: true\n      });\n\n      _invoke(_this.props, 'onStick', e, _this.props);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"unstick\", function (e, bound) {\n      _this.setState({\n        bound: bound,\n        sticky: false\n      });\n\n      _invoke(_this.props, 'onUnstick', e, _this.props);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"stickToContextBottom\", function (e) {\n      _invoke(_this.props, 'onBottom', e, _this.props);\n\n      _this.stick(e, true);\n\n      _this.pushing(true);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"stickToContextTop\", function (e) {\n      _invoke(_this.props, 'onTop', e, _this.props);\n\n      _this.unstick(e, false);\n\n      _this.pushing(false);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"stickToScreenBottom\", function (e) {\n      var bottom = _this.props.bottomOffset;\n\n      _this.stick(e, false);\n\n      _this.setState({\n        bottom: bottom,\n        top: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"stickToScreenTop\", function (e) {\n      var top = _this.props.offset;\n\n      _this.stick(e, false);\n\n      _this.setState({\n        top: top,\n        bottom: null\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Sticky, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!isBrowser()) return;\n      var active = this.props.active;\n\n      if (active) {\n        this.handleUpdate();\n        this.addListeners(this.props);\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _this$props = this.props,\n          current = _this$props.active,\n          currentScrollContext = _this$props.scrollContext;\n      var next = nextProps.active,\n          nextScrollContext = nextProps.scrollContext;\n\n      if (current === next) {\n        if (currentScrollContext !== nextScrollContext) {\n          this.removeListeners();\n          this.addListeners(nextProps);\n        }\n\n        return;\n      }\n\n      if (next) {\n        this.handleUpdate();\n        this.addListeners(nextProps);\n        return;\n      }\n\n      this.removeListeners();\n      this.setState({\n        sticky: false\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (!isBrowser()) return;\n      var active = this.props.active;\n\n      if (active) {\n        this.removeListeners();\n        cancelAnimationFrame(this.frameId);\n      }\n    } // ----------------------------------------\n    // Events\n    // ----------------------------------------\n\n  }, {\n    key: \"computeStyle\",\n    value: function computeStyle() {\n      var styleElement = this.props.styleElement;\n      var _this$state = this.state,\n          bottom = _this$state.bottom,\n          bound = _this$state.bound,\n          sticky = _this$state.sticky,\n          top = _this$state.top;\n      if (!sticky) return styleElement;\n      return _objectSpread({\n        bottom: bound ? 0 : bottom,\n        top: bound ? undefined : top,\n        width: this.triggerRect.width\n      }, styleElement);\n    } // Return true when the component reached the bottom of the context\n\n  }, {\n    key: \"render\",\n    // ----------------------------------------\n    // Render\n    // ----------------------------------------\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className;\n      var _this$state2 = this.state,\n          bottom = _this$state2.bottom,\n          bound = _this$state2.bound,\n          sticky = _this$state2.sticky;\n      var rest = getUnhandledProps(Sticky, this.props);\n      var ElementType = getElementType(Sticky, this.props);\n      var containerClasses = cx(sticky && 'ui', sticky && 'stuck-container', sticky && (bound ? 'bound-container' : 'fixed-container'), className);\n      var elementClasses = cx('ui', sticky && (bound ? 'bound bottom' : 'fixed'), sticky && !bound && (bottom === null ? 'top' : 'bottom'), 'sticky');\n      var triggerStyles = sticky && this.stickyRect ? {\n        height: this.stickyRect.height\n      } : {};\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: containerClasses\n      }), React.createElement(\"div\", {\n        ref: this.triggerRef,\n        style: triggerStyles\n      }), React.createElement(\"div\", {\n        className: elementClasses,\n        ref: this.stickyRef,\n        style: this.computeStyle()\n      }, children));\n    }\n  }]);\n\n  return Sticky;\n}(Component);\n\n_defineProperty(Sticky, \"defaultProps\", {\n  active: true,\n  bottomOffset: 0,\n  offset: 0,\n  scrollContext: isBrowser() ? window : null\n});\n\n_defineProperty(Sticky, \"handledProps\", [\"active\", \"as\", \"bottomOffset\", \"children\", \"className\", \"context\", \"offset\", \"onBottom\", \"onStick\", \"onTop\", \"onUnstick\", \"pushing\", \"scrollContext\", \"styleElement\"]);\n\nexport { Sticky as default };\nSticky.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A Sticky can be active. */\n  active: PropTypes.bool,\n\n  /** Offset in pixels from the bottom of the screen when fixing element to viewport. */\n  bottomOffset: PropTypes.number,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Context which sticky element should stick to. */\n  context: PropTypes.oneOfType([customPropTypes.domNode, customPropTypes.refObject]),\n\n  /** Offset in pixels from the top of the screen when fixing element to viewport. */\n  offset: PropTypes.number,\n\n  /**\n   * Callback when element is bound to bottom of parent container.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onBottom: PropTypes.func,\n\n  /**\n   * Callback when element is fixed to page.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onStick: PropTypes.func,\n\n  /**\n   * Callback when element is bound to top of parent container.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onTop: PropTypes.func,\n\n  /**\n   * Callback when element is unfixed from page.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onUnstick: PropTypes.func,\n\n  /** Whether element should be \"pushed\" by the viewport, attaching to the bottom of the screen when scrolling up. */\n  pushing: PropTypes.bool,\n\n  /** Context which sticky should attach onscroll events. */\n  scrollContext: PropTypes.oneOfType([customPropTypes.domNode, customPropTypes.refObject]),\n\n  /** Custom style for sticky element. */\n  styleElement: PropTypes.object\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _includes from \"lodash/includes\";\nimport _map from \"lodash/map\";\nimport _invoke from \"lodash/invoke\";\nimport _get from \"lodash/get\";\nimport _isNil from \"lodash/isNil\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Children, cloneElement, Component, createRef } from 'react';\nimport { childrenUtils, createHTMLInput, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, handleRef, partitionHTMLProps, useKeyOnly, useValueAndKey } from '../../lib';\nimport Button from '../Button';\nimport Icon from '../Icon';\nimport Label from '../Label';\n/**\n * An Input is a field used to elicit a response from a user.\n * @see Button\n * @see Form\n * @see Icon\n * @see Label\n */\n\nvar Input =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Input, _Component);\n\n  function Input() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Input);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Input)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"inputRef\", createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"computeIcon\", function () {\n      var _this$props = _this.props,\n          loading = _this$props.loading,\n          icon = _this$props.icon;\n      if (!_isNil(icon)) return icon;\n      if (loading) return 'spinner';\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"computeTabIndex\", function () {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          tabIndex = _this$props2.tabIndex;\n      if (!_isNil(tabIndex)) return tabIndex;\n      if (disabled) return -1;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"focus\", function () {\n      return _this.inputRef.current.focus();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"select\", function () {\n      return _this.inputRef.current.select();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      var value = _get(e, 'target.value');\n\n      _invoke(_this.props, 'onChange', e, _objectSpread({}, _this.props, {\n        value: value\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChildOverrides\", function (child, defaultProps) {\n      return _objectSpread({}, defaultProps, child.props, {\n        ref: function ref(c) {\n          handleRef(child.ref, c);\n          _this.inputRef.current = c;\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"partitionProps\", function () {\n      var _this$props3 = _this.props,\n          disabled = _this$props3.disabled,\n          type = _this$props3.type;\n\n      var tabIndex = _this.computeTabIndex();\n\n      var unhandled = getUnhandledProps(Input, _this.props);\n\n      var _partitionHTMLProps = partitionHTMLProps(unhandled),\n          _partitionHTMLProps2 = _slicedToArray(_partitionHTMLProps, 2),\n          htmlInputProps = _partitionHTMLProps2[0],\n          rest = _partitionHTMLProps2[1];\n\n      return [_objectSpread({}, htmlInputProps, {\n        disabled: disabled,\n        type: type,\n        tabIndex: tabIndex,\n        onChange: _this.handleChange,\n        ref: _this.inputRef\n      }), rest];\n    });\n\n    return _this;\n  }\n\n  _createClass(Input, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props4 = this.props,\n          action = _this$props4.action,\n          actionPosition = _this$props4.actionPosition,\n          children = _this$props4.children,\n          className = _this$props4.className,\n          disabled = _this$props4.disabled,\n          error = _this$props4.error,\n          fluid = _this$props4.fluid,\n          focus = _this$props4.focus,\n          icon = _this$props4.icon,\n          iconPosition = _this$props4.iconPosition,\n          input = _this$props4.input,\n          inverted = _this$props4.inverted,\n          label = _this$props4.label,\n          labelPosition = _this$props4.labelPosition,\n          loading = _this$props4.loading,\n          size = _this$props4.size,\n          transparent = _this$props4.transparent,\n          type = _this$props4.type;\n      var classes = cx('ui', size, useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(fluid, 'fluid'), useKeyOnly(focus, 'focus'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(transparent, 'transparent'), useValueAndKey(actionPosition, 'action') || useKeyOnly(action, 'action'), useValueAndKey(iconPosition, 'icon') || useKeyOnly(icon || loading, 'icon'), useValueAndKey(labelPosition, 'labeled') || useKeyOnly(label, 'labeled'), 'input', className);\n      var ElementType = getElementType(Input, this.props);\n\n      var _this$partitionProps = this.partitionProps(),\n          _this$partitionProps2 = _slicedToArray(_this$partitionProps, 2),\n          htmlInputProps = _this$partitionProps2[0],\n          rest = _this$partitionProps2[1]; // Render with children\n      // ----------------------------------------\n\n\n      if (!childrenUtils.isNil(children)) {\n        // add htmlInputProps to the `<input />` child\n        var childElements = _map(Children.toArray(children), function (child) {\n          if (child.type !== 'input') return child;\n          return cloneElement(child, _this2.handleChildOverrides(child, htmlInputProps));\n        });\n\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: classes\n        }), childElements);\n      } // Render Shorthand\n      // ----------------------------------------\n\n\n      var actionElement = Button.create(action, {\n        autoGenerateKey: false\n      });\n      var labelElement = Label.create(label, {\n        defaultProps: {\n          className: cx('label', // add 'left|right corner'\n          _includes(labelPosition, 'corner') && labelPosition)\n        },\n        autoGenerateKey: false\n      });\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes\n      }), actionPosition === 'left' && actionElement, labelPosition !== 'right' && labelElement, createHTMLInput(input || type, {\n        defaultProps: htmlInputProps,\n        autoGenerateKey: false\n      }), Icon.create(this.computeIcon(), {\n        autoGenerateKey: false\n      }), actionPosition !== 'left' && actionElement, labelPosition === 'right' && labelElement);\n    }\n  }]);\n\n  return Input;\n}(Component);\n\n_defineProperty(Input, \"defaultProps\", {\n  type: 'text'\n});\n\n_defineProperty(Input, \"handledProps\", [\"action\", \"actionPosition\", \"as\", \"children\", \"className\", \"disabled\", \"error\", \"fluid\", \"focus\", \"icon\", \"iconPosition\", \"input\", \"inverted\", \"label\", \"labelPosition\", \"loading\", \"onChange\", \"size\", \"tabIndex\", \"transparent\", \"type\"]);\n\nInput.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** An Input can be formatted to alert the user to an action they may perform. */\n  action: PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand]),\n\n  /** An action can appear along side an Input on the left or right. */\n  actionPosition: PropTypes.oneOf(['left']),\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** An Input field can show that it is disabled. */\n  disabled: PropTypes.bool,\n\n  /** An Input field can show the data contains errors. */\n  error: PropTypes.bool,\n\n  /** Take on the size of its container. */\n  fluid: PropTypes.bool,\n\n  /** An Input field can show a user is currently interacting with it. */\n  focus: PropTypes.bool,\n\n  /** Optional Icon to display inside the Input. */\n  icon: PropTypes.oneOfType([PropTypes.bool, customPropTypes.itemShorthand]),\n\n  /** An Icon can appear inside an Input on the left or right. */\n  iconPosition: PropTypes.oneOf(['left']),\n\n  /** Shorthand for creating the HTML Input. */\n  input: customPropTypes.itemShorthand,\n\n  /** Format to appear on dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Optional Label to display along side the Input. */\n  label: customPropTypes.itemShorthand,\n\n  /** A Label can appear outside an Input on the left or right. */\n  labelPosition: PropTypes.oneOf(['left', 'right', 'left corner', 'right corner']),\n\n  /** An Icon Input field can show that it is currently loading data. */\n  loading: PropTypes.bool,\n\n  /**\n   * Called on change.\n   *\n   * @param {ChangeEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props and a proposed value.\n   */\n  onChange: PropTypes.func,\n\n  /** An Input can vary in size. */\n  size: PropTypes.oneOf(['mini', 'small', 'large', 'big', 'huge', 'massive']),\n\n  /** An Input can receive focus. */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** Transparent Input has no background. */\n  transparent: PropTypes.bool,\n\n  /** The HTML input type. */\n  type: PropTypes.string\n} : {};\nInput.create = createShorthandFactory(Input, function (type) {\n  return {\n    type: type\n  };\n});\nexport default Input;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A divider visually segments content into groups.\n */\n\nfunction Divider(props) {\n  var children = props.children,\n      className = props.className,\n      clearing = props.clearing,\n      content = props.content,\n      fitted = props.fitted,\n      hidden = props.hidden,\n      horizontal = props.horizontal,\n      inverted = props.inverted,\n      section = props.section,\n      vertical = props.vertical;\n  var classes = cx('ui', useKeyOnly(clearing, 'clearing'), useKeyOnly(fitted, 'fitted'), useKeyOnly(hidden, 'hidden'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(inverted, 'inverted'), useKeyOnly(section, 'section'), useKeyOnly(vertical, 'vertical'), 'divider', className);\n  var rest = getUnhandledProps(Divider, props);\n  var ElementType = getElementType(Divider, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nDivider.handledProps = [\"as\", \"children\", \"className\", \"clearing\", \"content\", \"fitted\", \"hidden\", \"horizontal\", \"inverted\", \"section\", \"vertical\"];\nDivider.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Divider can clear the content above it. */\n  clearing: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Divider can be fitted without any space above or below it. */\n  fitted: PropTypes.bool,\n\n  /** Divider can divide content without creating a dividing line. */\n  hidden: PropTypes.bool,\n\n  /** Divider can segment content horizontally. */\n  horizontal: PropTypes.bool,\n\n  /** Divider can have its colours inverted. */\n  inverted: PropTypes.bool,\n\n  /** Divider can provide greater margins to divide sections of content. */\n  section: PropTypes.bool,\n\n  /** Divider can segment content vertically. */\n  vertical: PropTypes.bool\n} : {};\nexport default Divider;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A placeholder can contain a header.\n */\n\nfunction PlaceholderHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      image = props.image;\n  var classes = cx(useKeyOnly(image, 'image'), 'header', className);\n  var rest = getUnhandledProps(PlaceholderHeader, props);\n  var ElementType = getElementType(PlaceholderHeader, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nPlaceholderHeader.handledProps = [\"as\", \"children\", \"className\", \"content\", \"image\"];\nPlaceholderHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A placeholder can contain an image. */\n  image: PropTypes.bool\n} : {};\nexport default PlaceholderHeader;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A placeholder can contain an image.\n */\n\nfunction PlaceholderImage(props) {\n  var className = props.className,\n      square = props.square,\n      rectangular = props.rectangular;\n  var classes = cx(useKeyOnly(square, 'square'), useKeyOnly(rectangular, 'rectangular'), 'image', className);\n  var rest = getUnhandledProps(PlaceholderImage, props);\n  var ElementType = getElementType(PlaceholderImage, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }));\n}\n\nPlaceholderImage.handledProps = [\"as\", \"className\", \"rectangular\", \"square\"];\nPlaceholderImage.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** An image can modify size correctly with responsive styles. */\n  square: customPropTypes.every([customPropTypes.disallow(['rectangular']), PropTypes.bool]),\n\n  /** An image can modify size correctly with responsive styles. */\n  rectangular: customPropTypes.every([customPropTypes.disallow(['square']), PropTypes.bool])\n} : {};\nexport default PlaceholderImage;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A placeholder can contain have lines of text.\n */\n\nfunction PlaceholderLine(props) {\n  var className = props.className,\n      length = props.length;\n  var classes = cx('line', length, className);\n  var rest = getUnhandledProps(PlaceholderLine, props);\n  var ElementType = getElementType(PlaceholderLine, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }));\n}\n\nPlaceholderLine.handledProps = [\"as\", \"className\", \"length\"];\nPlaceholderLine.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A line can specify how long its contents should appear. */\n  length: PropTypes.oneOf(['full', 'very long', 'long', 'medium', 'short', 'very short'])\n} : {};\nexport default PlaceholderLine;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A placeholder can contain a paragraph.\n */\n\nfunction PlaceholderParagraph(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('paragraph', className);\n  var rest = getUnhandledProps(PlaceholderParagraph, props);\n  var ElementType = getElementType(PlaceholderParagraph, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nPlaceholderParagraph.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nPlaceholderParagraph.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default PlaceholderParagraph;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\nimport PlaceholderHeader from './PlaceholderHeader';\nimport PlaceholderImage from './PlaceholderImage';\nimport PlaceholderLine from './PlaceholderLine';\nimport PlaceholderParagraph from './PlaceholderParagraph';\n/**\n * A placeholder is used to reserve splace for content that soon will appear in a layout.\n */\n\nfunction Placeholder(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      fluid = props.fluid,\n      inverted = props.inverted;\n  var classes = cx('ui', useKeyOnly(fluid, 'fluid'), useKeyOnly(inverted, 'inverted'), 'placeholder', className);\n  var rest = getUnhandledProps(Placeholder, props);\n  var ElementType = getElementType(Placeholder, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nPlaceholder.handledProps = [\"as\", \"children\", \"className\", \"content\", \"fluid\", \"inverted\"];\nPlaceholder.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A fluid placeholder takes up the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** A placeholder can have their colors inverted. */\n  inverted: PropTypes.bool\n} : {};\nPlaceholder.Header = PlaceholderHeader;\nPlaceholder.Image = PlaceholderImage;\nPlaceholder.Line = PlaceholderLine;\nPlaceholder.Paragraph = PlaceholderParagraph;\nexport default Placeholder;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * Used in some Button types, such as `animated`.\n */\n\nfunction ButtonContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      hidden = props.hidden,\n      visible = props.visible;\n  var classes = cx(useKeyOnly(visible, 'visible'), useKeyOnly(hidden, 'hidden'), 'content', className);\n  var rest = getUnhandledProps(ButtonContent, props);\n  var ElementType = getElementType(ButtonContent, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nButtonContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"hidden\", \"visible\"];\nButtonContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Initially hidden, visible on hover. */\n  hidden: PropTypes.bool,\n\n  /** Initially visible, hidden on hover. */\n  visible: PropTypes.bool\n} : {};\nexport default ButtonContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _map from \"lodash/map\";\nimport _isNil from \"lodash/isNil\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useValueAndKey, useWidthProp } from '../../lib';\nimport Button from './Button';\n/**\n * Buttons can be grouped.\n */\n\nfunction ButtonGroup(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      buttons = props.buttons,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      compact = props.compact,\n      content = props.content,\n      floated = props.floated,\n      fluid = props.fluid,\n      icon = props.icon,\n      inverted = props.inverted,\n      labeled = props.labeled,\n      negative = props.negative,\n      positive = props.positive,\n      primary = props.primary,\n      secondary = props.secondary,\n      size = props.size,\n      toggle = props.toggle,\n      vertical = props.vertical,\n      widths = props.widths;\n  var classes = cx('ui', color, size, useKeyOnly(basic, 'basic'), useKeyOnly(compact, 'compact'), useKeyOnly(fluid, 'fluid'), useKeyOnly(icon, 'icon'), useKeyOnly(inverted, 'inverted'), useKeyOnly(labeled, 'labeled'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(primary, 'primary'), useKeyOnly(secondary, 'secondary'), useKeyOnly(toggle, 'toggle'), useKeyOnly(vertical, 'vertical'), useKeyOrValueAndKey(attached, 'attached'), useValueAndKey(floated, 'floated'), useWidthProp(widths), 'buttons', className);\n  var rest = getUnhandledProps(ButtonGroup, props);\n  var ElementType = getElementType(ButtonGroup, props);\n\n  if (_isNil(buttons)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), childrenUtils.isNil(children) ? content : children);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), _map(buttons, function (button) {\n    return Button.create(button);\n  }));\n}\n\nButtonGroup.handledProps = [\"as\", \"attached\", \"basic\", \"buttons\", \"children\", \"className\", \"color\", \"compact\", \"content\", \"floated\", \"fluid\", \"icon\", \"inverted\", \"labeled\", \"negative\", \"positive\", \"primary\", \"secondary\", \"size\", \"toggle\", \"vertical\", \"widths\"];\nButtonGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Groups can be attached to other content. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['left', 'right', 'top', 'bottom'])]),\n\n  /** Groups can be less pronounced. */\n  basic: PropTypes.bool,\n\n  /** Array of shorthand Button values. */\n  buttons: customPropTypes.collectionShorthand,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Groups can have a shared color. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Groups can reduce their padding to fit into tighter spaces. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Groups can be aligned to the left or right of its container. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** Groups can take the width of their container. */\n  fluid: PropTypes.bool,\n\n  /** Groups can be formatted as icons. */\n  icon: PropTypes.bool,\n\n  /** Groups can be formatted to appear on dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Groups can be formatted as labeled icon buttons. */\n  labeled: PropTypes.bool,\n\n  /** Groups can hint towards a negative consequence. */\n  negative: PropTypes.bool,\n\n  /** Groups can hint towards a positive consequence. */\n  positive: PropTypes.bool,\n\n  /** Groups can be formatted to show different levels of emphasis. */\n  primary: PropTypes.bool,\n\n  /** Groups can be formatted to show different levels of emphasis. */\n  secondary: PropTypes.bool,\n\n  /** Groups can have different sizes. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** Groups can be formatted to toggle on and off. */\n  toggle: PropTypes.bool,\n\n  /** Groups can be formatted to appear vertically. */\n  vertical: PropTypes.bool,\n\n  /** Groups can have their widths divided evenly. */\n  widths: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nexport default ButtonGroup;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * Button groups can contain conditionals.\n */\n\nfunction ButtonOr(props) {\n  var className = props.className,\n      text = props.text;\n  var classes = cx('or', className);\n  var rest = getUnhandledProps(ButtonOr, props);\n  var ElementType = getElementType(ButtonOr, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes,\n    \"data-text\": text\n  }));\n}\n\nButtonOr.handledProps = [\"as\", \"className\", \"text\"];\nButtonOr.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Or buttons can have their text localized, or adjusted by using the text prop. */\n  text: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : {};\nexport default ButtonOr;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _invoke from \"lodash/invoke\";\nimport _isNil from \"lodash/isNil\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component, createRef } from 'react';\nimport Ref from '../../addons/Ref';\nimport { childrenUtils, customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useValueAndKey } from '../../lib';\nimport Icon from '../Icon/Icon';\nimport Label from '../Label/Label';\nimport ButtonContent from './ButtonContent';\nimport ButtonGroup from './ButtonGroup';\nimport ButtonOr from './ButtonOr';\n/**\n * A Button indicates a possible user action.\n * @see Form\n * @see Icon\n * @see Label\n */\n\nvar Button =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Button, _Component);\n\n  function Button() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Button);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Button)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"ref\", createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"computeElementType\", function () {\n      var _this$props = _this.props,\n          attached = _this$props.attached,\n          label = _this$props.label;\n      if (!_isNil(attached) || !_isNil(label)) return 'div';\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"computeTabIndex\", function (ElementType) {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          tabIndex = _this$props2.tabIndex;\n      if (!_isNil(tabIndex)) return tabIndex;\n      if (disabled) return -1;\n      if (ElementType === 'div') return 0;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"focus\", function () {\n      return _invoke(_this.ref.current, 'focus');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (e) {\n      var disabled = _this.props.disabled;\n\n      if (disabled) {\n        e.preventDefault();\n        return;\n      }\n\n      _invoke(_this.props, 'onClick', e, _this.props);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"hasIconClass\", function () {\n      var _this$props3 = _this.props,\n          labelPosition = _this$props3.labelPosition,\n          children = _this$props3.children,\n          content = _this$props3.content,\n          icon = _this$props3.icon;\n      if (icon === true) return true;\n      return icon && (labelPosition || childrenUtils.isNil(children) && _isNil(content));\n    });\n\n    return _this;\n  }\n\n  _createClass(Button, [{\n    key: \"computeButtonAriaRole\",\n    value: function computeButtonAriaRole(ElementType) {\n      var role = this.props.role;\n      if (!_isNil(role)) return role;\n      if (ElementType !== 'button') return 'button';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          active = _this$props4.active,\n          animated = _this$props4.animated,\n          attached = _this$props4.attached,\n          basic = _this$props4.basic,\n          children = _this$props4.children,\n          circular = _this$props4.circular,\n          className = _this$props4.className,\n          color = _this$props4.color,\n          compact = _this$props4.compact,\n          content = _this$props4.content,\n          disabled = _this$props4.disabled,\n          floated = _this$props4.floated,\n          fluid = _this$props4.fluid,\n          icon = _this$props4.icon,\n          inverted = _this$props4.inverted,\n          label = _this$props4.label,\n          labelPosition = _this$props4.labelPosition,\n          loading = _this$props4.loading,\n          negative = _this$props4.negative,\n          positive = _this$props4.positive,\n          primary = _this$props4.primary,\n          secondary = _this$props4.secondary,\n          size = _this$props4.size,\n          toggle = _this$props4.toggle;\n      var baseClasses = cx(color, size, useKeyOnly(active, 'active'), useKeyOnly(basic, 'basic'), useKeyOnly(circular, 'circular'), useKeyOnly(compact, 'compact'), useKeyOnly(fluid, 'fluid'), useKeyOnly(this.hasIconClass(), 'icon'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(primary, 'primary'), useKeyOnly(secondary, 'secondary'), useKeyOnly(toggle, 'toggle'), useKeyOrValueAndKey(animated, 'animated'), useKeyOrValueAndKey(attached, 'attached'));\n      var labeledClasses = cx(useKeyOrValueAndKey(labelPosition || !!label, 'labeled'));\n      var wrapperClasses = cx(useKeyOnly(disabled, 'disabled'), useValueAndKey(floated, 'floated'));\n      var rest = getUnhandledProps(Button, this.props);\n      var ElementType = getElementType(Button, this.props, this.computeElementType);\n      var tabIndex = this.computeTabIndex(ElementType);\n\n      if (!_isNil(label)) {\n        var buttonClasses = cx('ui', baseClasses, 'button', className);\n        var containerClasses = cx('ui', labeledClasses, 'button', className, wrapperClasses);\n        var labelElement = Label.create(label, {\n          defaultProps: {\n            basic: true,\n            pointing: labelPosition === 'left' ? 'right' : 'left'\n          },\n          autoGenerateKey: false\n        });\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: containerClasses,\n          onClick: this.handleClick\n        }), labelPosition === 'left' && labelElement, React.createElement(Ref, {\n          innerRef: this.ref\n        }, React.createElement(\"button\", {\n          className: buttonClasses,\n          \"aria-pressed\": toggle ? !!active : undefined,\n          disabled: disabled,\n          tabIndex: tabIndex\n        }, Icon.create(icon, {\n          autoGenerateKey: false\n        }), \" \", content)), (labelPosition === 'right' || !labelPosition) && labelElement);\n      }\n\n      var classes = cx('ui', baseClasses, wrapperClasses, labeledClasses, 'button', className);\n      var hasChildren = !childrenUtils.isNil(children);\n      var role = this.computeButtonAriaRole(ElementType);\n      return React.createElement(Ref, {\n        innerRef: this.ref\n      }, React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        \"aria-pressed\": toggle ? !!active : undefined,\n        disabled: disabled && ElementType === 'button' || undefined,\n        onClick: this.handleClick,\n        role: role,\n        tabIndex: tabIndex\n      }), hasChildren && children, !hasChildren && Icon.create(icon, {\n        autoGenerateKey: false\n      }), !hasChildren && content));\n    }\n  }]);\n\n  return Button;\n}(Component);\n\n_defineProperty(Button, \"defaultProps\", {\n  as: 'button'\n});\n\n_defineProperty(Button, \"Content\", ButtonContent);\n\n_defineProperty(Button, \"Group\", ButtonGroup);\n\n_defineProperty(Button, \"Or\", ButtonOr);\n\n_defineProperty(Button, \"handledProps\", [\"active\", \"animated\", \"as\", \"attached\", \"basic\", \"children\", \"circular\", \"className\", \"color\", \"compact\", \"content\", \"disabled\", \"floated\", \"fluid\", \"icon\", \"inverted\", \"label\", \"labelPosition\", \"loading\", \"negative\", \"onClick\", \"positive\", \"primary\", \"role\", \"secondary\", \"size\", \"tabIndex\", \"toggle\"]);\n\nButton.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A button can show it is currently the active user selection. */\n  active: PropTypes.bool,\n\n  /** A button can animate to show hidden content. */\n  animated: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['fade', 'vertical'])]),\n\n  /** A button can be attached to other content. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['left', 'right', 'top', 'bottom'])]),\n\n  /** A basic button is less pronounced. */\n  basic: PropTypes.bool,\n\n  /** Primary content. */\n  children: customPropTypes.every([PropTypes.node, customPropTypes.disallow(['label']), customPropTypes.givenProps({\n    icon: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.object.isRequired, PropTypes.element.isRequired])\n  }, customPropTypes.disallow(['icon']))]),\n\n  /** A button can be circular. */\n  circular: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A button can have different colors */\n  color: PropTypes.oneOf([].concat(_toConsumableArray(SUI.COLORS), ['facebook', 'google plus', 'instagram', 'linkedin', 'twitter', 'vk', 'youtube'])),\n\n  /** A button can reduce its padding to fit into tighter spaces. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A button can show it is currently unable to be interacted with. */\n  disabled: PropTypes.bool,\n\n  /** A button can be aligned to the left or right of its container. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A button can take the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** Add an Icon by name, props object, or pass an <Icon />. */\n  icon: customPropTypes.some([PropTypes.bool, PropTypes.string, PropTypes.object, PropTypes.element]),\n\n  /** A button can be formatted to appear on dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Add a Label by text, props object, or pass a <Label />. */\n  label: customPropTypes.some([PropTypes.string, PropTypes.object, PropTypes.element]),\n\n  /** A labeled button can format a Label or Icon to appear on the left or right. */\n  labelPosition: PropTypes.oneOf(['right', 'left']),\n\n  /** A button can show a loading indicator. */\n  loading: PropTypes.bool,\n\n  /** A button can hint towards a negative consequence. */\n  negative: PropTypes.bool,\n\n  /**\n   * Called after user's click.\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: PropTypes.func,\n\n  /** A button can hint towards a positive consequence. */\n  positive: PropTypes.bool,\n\n  /** A button can be formatted to show different levels of emphasis. */\n  primary: PropTypes.bool,\n\n  /** The role of the HTML element. */\n  role: PropTypes.string,\n\n  /** A button can be formatted to show different levels of emphasis. */\n  secondary: PropTypes.bool,\n\n  /** A button can have different sizes. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** A button can receive focus. */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** A button can be formatted to toggle on and off. */\n  toggle: PropTypes.bool\n} : {};\nButton.create = createShorthandFactory(Button, function (value) {\n  return {\n    content: value\n  };\n});\nexport default Button;"],"sourceRoot":""}