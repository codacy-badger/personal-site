{"version":3,"sources":["webpack:///./src/pages/index.jsx","webpack:///./data/SiteConfig.js","webpack:///./src/components/Header/Header.jsx","webpack:///./src/layout/index.jsx","webpack:///./node_modules/url-join/lib/url-join.js","webpack:///./src/components/PostListing/PostListing.jsx","webpack:///./src/components/SEO/SEO.jsx"],"names":["Index","render","postEdges","this","props","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_3__","pathname","location","className","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","title","config","siteTitle","_components_SEO_SEO__WEBPACK_IMPORTED_MODULE_5__","_components_PostListing_PostListing__WEBPACK_IMPORTED_MODULE_4__","React","Component","pageQuery","siteTitleShort","siteTitleAlt","siteLogo","siteUrl","pathPrefix","siteDescription","siteRss","siteFBAppID","googleAnalyticsID","disqusShortname","postDefaultCategoryID","dateFromFormat","dateFormat","userName","userEmail","userTwitter","userLocation","userAvatar","userDescription","userLinks","label","url","iconClassName","copyright","themeColor","backgroundColor","replace","substr","slice","module","exports","Header","_ref","activeItem","useState","react_default","Menu","secondary","pointing","Item","active","as","Link","to","position","Icon","name","color","MainLayout","children","Fragment","Helmet_default","content","Grid","container","celled","Row","Column","width","components_Header_Header","style","height","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","definition","strArray","resultArray","match","length","first","shift","i","component","TypeError","push","str","join","parts","split","normalize","arguments","call","undefined","__webpack_require__","PostListing","getPostList","postList","forEach","postEdge","path","node","fields","slug","tags","frontmatter","cover","date","excerpt","timeToRead","map","post","gatsby__WEBPACK_IMPORTED_MODULE_2__","key","SEO","description","image","postURL","_this$props","postNode","postPath","postSEO","postMeta","urljoin","blogURL","schemaOrgJSONLD","@context","@type","alternateName","itemListElement","item","@id","headline","type","JSON","stringify","property"],"mappings":"4OAQMA,4FACJC,OAAA,WACE,IAAMC,EAAYC,KAAKC,MAAMC,KAAKC,kBAAkBC,MACpD,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAUT,KAAKC,MAAMS,SAASD,UACpCJ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBACbN,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAQO,MAAOC,IAAOC,YACtBV,EAAAC,EAAAC,cAACS,EAAA,EAAD,MACAX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAalB,UAAWA,UARdmB,IAAMC,WAeXtB,YAGR,IAAMuB,EAAS,wCC1BtB,IAAMN,EAAS,CACbC,UAAW,0BACXM,eAAgB,aAChBC,aAAc,4BACdC,SAAU,uBACVC,QAAS,2BACTC,WAAY,2BACZC,gBAAiB,kDACjBC,QAAS,WACTC,YAAa,mBACbC,kBAAmB,gBACnBC,gBAAiB,iDACjBC,sBAAuB,OACvBC,eAAgB,aAChBC,WAAY,aACZC,SAAU,gBACVC,UAAW,2BACXC,YAAa,GACbC,aAAc,oBACdC,WAAY,+CACZC,gBACE,sPAEFC,UAAW,CACT,CACEC,MAAO,SACPC,IAAK,oDACLC,cAAe,gBAEjB,CACEF,MAAO,UACPC,IAAK,6BACLC,cAAe,iBAEjB,CACEF,MAAO,QACPC,IAAK,0BACLC,cAAe,mBAGnBC,UAAW,kCACXC,WAAY,UACZC,gBAAiB,WAMO,MAAtBhC,EAAOW,WACTX,EAAOW,WAAa,GAGpBX,EAAOW,WAAP,IAAwBX,EAAOW,WAAWsB,QAAQ,WAAY,IAI9B,MAA9BjC,EAAOU,QAAQwB,QAAQ,KACzBlC,EAAOU,QAAUV,EAAOU,QAAQyB,MAAM,GAAI,IAGxCnC,EAAOa,SAAiC,MAAtBb,EAAOa,QAAQ,KACnCb,EAAOa,QAAP,IAAqBb,EAAOa,SAE9BuB,EAAOC,QAAUrC,+ICrCFsC,UArBA,SAAAC,GAAkB,IAAf5C,EAAe4C,EAAf5C,SAET6C,EAAcC,mBAAS9C,GAFC,GAG/B,OACE+C,EAAAlD,EAAAC,cAACkD,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAQ,GACtBH,EAAAlD,EAAAC,cAACkD,EAAA,EAAKG,KAAN,CAAWC,OAAuB,MAAfP,EAAoBQ,GAAIC,OAAMC,GAAG,KAApD,QAGAR,EAAAlD,EAAAC,cAACkD,EAAA,EAAKA,KAAN,CAAWQ,SAAS,SAClBT,EAAAlD,EAAAC,cAACkD,EAAA,EAAKG,KAAN,CAAWC,OAAuB,WAAfP,EAAyBQ,GAAIC,OAAMC,GAAG,UAAzD,SAGAR,EAAAlD,EAAAC,cAACkD,EAAA,EAAKG,KAAN,CAAWC,OAAuB,WAAfP,EAAyBQ,GAAIC,OAAMC,GAAG,UACvDR,EAAAlD,EAAAC,cAAC2D,EAAA,EAAD,CAAMC,KAAK,OAAOC,MAAM,SAD1B,aCwBOC,IArBI,SAAAhB,GAA4B,IAAzBiB,EAAyBjB,EAAzBiB,SAAU7D,EAAe4C,EAAf5C,SAC9B,OACE+C,EAAAlD,EAAAC,cAAAiD,EAAAlD,EAAAiE,SAAA,KACEf,EAAAlD,EAAAC,cAACiE,EAAAlE,EAAD,KACEkD,EAAAlD,EAAAC,cAAA,QAAM4D,KAAK,cAAcM,QAAS3D,IAAOY,mBAE3C8B,EAAAlD,EAAAC,cAACmE,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAM,GACpBpB,EAAAlD,EAAAC,cAACmE,EAAA,EAAKG,IAAN,KACErB,EAAAlD,EAAAC,cAACmE,EAAA,EAAKI,OAAN,CAAaC,MAAO,IAClBvB,EAAAlD,EAAAC,cAACyE,EAAD,CAAYvE,SAAUA,MAG1B+C,EAAAlD,EAAAC,cAACmE,EAAA,EAAKG,IAAN,KACGP,EACLd,EAAAlD,EAAAC,cAAA,OAAK0E,MAAO,CAACC,OAAQ,gCClC3B,IAAAC,EAAAC,EAAAC,IAIC,WAwDD,kBASA,OA/DA,SAAAC,GACA,IAAAC,EAAA,GAGA,GAAAD,EAAA,GAAAE,MAAA,kBAAAF,EAAAG,OAAA,GACA,IAAAC,EAAAJ,EAAAK,QACAL,EAAA,GAAAI,EAAAJ,EAAA,GAIAA,EAAA,GAAAE,MAAA,gBACAF,EAAA,GAAAA,EAAA,GAAAvC,QAAA,2BAEAuC,EAAA,GAAAA,EAAA,GAAAvC,QAAA,0BAGA,QAAA6C,EAAA,EAAmBA,EAAAN,EAAAG,OAAqBG,IAAA,CACxC,IAAAC,EAAAP,EAAAM,GAEA,oBAAAC,EACA,UAAAC,UAAA,kCAAAD,GAGA,KAAAA,IAEAD,EAAA,IAEAC,IAAA9C,QAAA,cAIA8C,EAFAD,EAAAN,EAAAG,OAAA,EAEAI,EAAA9C,QAAA,aAGA8C,EAAA9C,QAAA,cAGAwC,EAAAQ,KAAAF,IAIA,IAAAG,EAAAT,EAAAU,KAAA,KAOAC,GAHAF,IAAAjD,QAAA,yBAGAoD,MAAA,KAGA,OAFAH,EAAAE,EAAAP,SAAAO,EAAAT,OAAA,UAAAS,EAAAD,KAAA,KAcAG,CANA,iBAAAC,UAAA,GACAA,UAAA,GAEA,GAAApD,MAAAqD,KAAAD,cAjEmCnD,EAAAC,QAAAD,EAAAC,QAAAkC,SACqCkB,KAAAnB,EAAA,mBAAjBD,EAAA,GAAiBA,EAAAmB,KAAAnD,EAAAqD,EAAArD,EAAAD,GAAAiC,KAAAjC,EAAAC,QAAAiC,iFCClEqB,oGACJC,YAAA,WACE,IAAMC,EAAW,GAYjB,OAXA3G,KAAKC,MAAMF,UAAU6G,QAAQ,SAAAC,GAC3BF,EAASZ,KAAK,CACZe,KAAMD,EAASE,KAAKC,OAAOC,KAC3BC,KAAML,EAASE,KAAKI,YAAYD,KAChCE,MAAOP,EAASE,KAAKI,YAAYC,MACjCvG,MAAOgG,EAASE,KAAKI,YAAYtG,MACjCwG,KAAMR,EAASE,KAAKC,OAAOK,KAC3BC,QAAST,EAASE,KAAKO,QACvBC,WAAYV,EAASE,KAAKQ,eAGvBZ,KAET7G,OAAA,WACE,IAAM6G,EAAW3G,KAAK0G,cACtB,OACErG,EAAAC,EAAAC,cAAA,WAEEoG,EAASa,IAAI,SAAAC,GAAI,OACfpH,EAAAC,EAAAC,cAACmH,EAAA,KAAD,CAAM1D,GAAIyD,EAAKX,KAAMa,IAAKF,EAAK5G,OAC7BR,EAAAC,EAAAC,cAAA,UAAKkH,EAAK5G,eAvBIK,IAAMC,WA+BjBsF,kIC7BTmB,4FACJ9H,OAAA,WAAS,IAEHe,EACAgH,EACAC,EACAC,EALGC,EACiChI,KAAKC,MAArCgI,EADDD,EACCC,SAAUC,EADXF,EACWE,SAAUC,EADrBH,EACqBG,QAK5B,GAAIA,EAAS,CACX,IAAMC,EAAWH,EAASd,YACvBtG,EAAUuH,EAAVvH,MACHgH,EAAcO,EAASP,YACnBO,EAASP,YACTI,EAASX,QACbQ,EAAQM,EAAShB,MACjBW,EAAUM,IAAQvH,IAAOU,QAASV,IAAOW,WAAYyG,QAErDrH,EAAQC,IAAOC,UACf8G,EAAc/G,IAAOY,gBACrBoG,EAAQhH,IAAOS,SAGjBuG,EAAQO,IAAQvH,IAAOU,QAASV,IAAOW,WAAYqG,GACnD,IAAMQ,EAAUD,IAAQvH,IAAOU,QAASV,IAAOW,YACzC8G,EAAkB,CACtB,CACEC,WAAY,oBACZC,QAAS,UACT/F,IAAK4F,EACLnE,KAAMtD,EACN6H,cAAe5H,IAAOQ,aAAeR,IAAOQ,aAAe,KAmC/D,OAhCI6G,GACFI,EAAgBxC,KACd,CACEyC,WAAY,oBACZC,QAAS,iBACTE,gBAAiB,CACf,CACEF,QAAS,WACTxE,SAAU,EACV2E,KAAM,CACJC,MAAOd,EACP5D,KAAMtD,EACNiH,YAKR,CACEU,WAAY,oBACZC,QAAS,cACT/F,IAAK4F,EACLnE,KAAMtD,EACN6H,cAAe5H,IAAOQ,aAAeR,IAAOQ,aAAe,GAC3DwH,SAAUjI,EACViH,MAAO,CACLW,QAAS,cACT/F,IAAKoF,GAEPD,gBAKJxH,EAAAC,EAAAC,cAACK,EAAAN,EAAD,KAEED,EAAAC,EAAAC,cAAA,QAAM4D,KAAK,cAAcM,QAASoD,IAClCxH,EAAAC,EAAAC,cAAA,QAAM4D,KAAK,QAAQM,QAASqD,IAG5BzH,EAAAC,EAAAC,cAAA,UAAQwI,KAAK,uBACVC,KAAKC,UAAUV,IAIlBlI,EAAAC,EAAAC,cAAA,QAAM2I,SAAS,SAASzE,QAAS0D,EAAUJ,EAAUO,IACpDH,EAAU9H,EAAAC,EAAAC,cAAA,QAAM2I,SAAS,UAAUzE,QAAQ,YAAe,KAC3DpE,EAAAC,EAAAC,cAAA,QAAM2I,SAAS,WAAWzE,QAAS5D,IACnCR,EAAAC,EAAAC,cAAA,QAAM2I,SAAS,iBAAiBzE,QAASoD,IACzCxH,EAAAC,EAAAC,cAAA,QAAM2I,SAAS,WAAWzE,QAASqD,IACnCzH,EAAAC,EAAAC,cAAA,QACE2I,SAAS,YACTzE,QAAS3D,IAAOc,YAAcd,IAAOc,YAAc,KAIrDvB,EAAAC,EAAAC,cAAA,QAAM4D,KAAK,eAAeM,QAAQ,wBAClCpE,EAAAC,EAAAC,cAAA,QACE4D,KAAK,kBACLM,QAAS3D,IAAOsB,YAActB,IAAOsB,YAAc,KAErD/B,EAAAC,EAAAC,cAAA,QAAM4D,KAAK,gBAAgBM,QAAS5D,IACpCR,EAAAC,EAAAC,cAAA,QAAM4D,KAAK,sBAAsBM,QAASoD,IAC1CxH,EAAAC,EAAAC,cAAA,QAAM4D,KAAK,gBAAgBM,QAASqD,SA9F1B3G,aAoGHyG","file":"component---src-pages-index-jsx-c7fa9562ecae678a0f8f.js","sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport SEO from \"../components/SEO/SEO\";\nimport config from \"../../data/SiteConfig\";\n\nclass Index extends React.Component {\n  render() {\n    const postEdges = this.props.data.allMarkdownRemark.edges;\n    return (\n      <Layout pathname={this.props.location.pathname}>\n        <div className=\"index-container\">\n          <Helmet title={config.siteTitle} />\n          <SEO />\n          <PostListing postEdges={postEdges} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default Index;\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [fields___date], order: DESC }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n","const config = {\n  siteTitle: \"Gatsby Advanced Starter\", // Site title.\n  siteTitleShort: \"GA Starter\", // Short site title for homescreen (PWA). Preferably should be under 12 characters to prevent truncation.\n  siteTitleAlt: \"GatsbyJS Advanced Starter\", // Alternative site title for SEO.\n  siteLogo: \"/logos/logo-1024.png\", // Logo used for SEO and manifest.\n  siteUrl: \"https://vagr9k.github.io\", // Domain of your website without pathPrefix.\n  pathPrefix: \"/gatsby-advanced-starter\", // Prefixes all links. For cases when deployed to example.github.io/gatsby-advanced-starter/.\n  siteDescription: \"A GatsbyJS stater with Advanced design in mind.\", // Website description used for RSS feeds/meta description tag.\n  siteRss: \"/rss.xml\", // Path to the RSS file.\n  siteFBAppID: \"1825356251115265\", // FB Application ID for using app insights\n  googleAnalyticsID: \"UA-47311644-5\", // GA tracking ID.\n  disqusShortname: \"https-vagr9k-github-io-gatsby-advanced-starter\", // Disqus shortname.\n  postDefaultCategoryID: \"Tech\", // Default category for posts.\n  dateFromFormat: \"YYYY-MM-DD\", // Date format used in the frontmatter.\n  dateFormat: \"DD/MM/YYYY\", // Date format for display.\n  userName: \"Advanced User\", // Username to display in the author segment.\n  userEmail: \"AdvancedUser@example.com\", // Email used for RSS feed's author segment\n  userTwitter: \"\", // Optionally renders \"Follow Me\" in the UserInfo segment.\n  userLocation: \"North Pole, Earth\", // User location to display in the author segment.\n  userAvatar: \"https://api.adorable.io/avatars/150/test.png\", // User avatar to display in the author segment.\n  userDescription:\n    \"Yeah, I like animals better than people sometimes... Especially dogs. Dogs are the best. Every time you come home, they act like they haven't seen you in a year. And the good thing about dogs... is they got different dogs for different people.\", // User description to display in the author segment.\n  // Links to social profiles/projects you want to display in the author segment/navigation bar.\n  userLinks: [\n    {\n      label: \"GitHub\",\n      url: \"https://github.com/Vagr9K/gatsby-advanced-starter\",\n      iconClassName: \"fa fa-github\"\n    },\n    {\n      label: \"Twitter\",\n      url: \"https://twitter.com/Vagr9K\",\n      iconClassName: \"fa fa-twitter\"\n    },\n    {\n      label: \"Email\",\n      url: \"mailto:vagr9k@gmail.com\",\n      iconClassName: \"fa fa-envelope\"\n    }\n  ],\n  copyright: \"Copyright © 2019. Advanced User\", // Copyright string for the footer of the website and RSS feed.\n  themeColor: \"#c62828\", // Used for setting manifest and progress theme colors.\n  backgroundColor: \"#e0e0e0\" // Used for setting manifest background color.\n};\n\n// Validate\n\n// Make sure pathPrefix is empty if not needed\nif (config.pathPrefix === \"/\") {\n  config.pathPrefix = \"\";\n} else {\n  // Make sure pathPrefix only contains the first forward slash\n  config.pathPrefix = `/${config.pathPrefix.replace(/^\\/|\\/$/g, \"\")}`;\n}\n\n// Make sure siteUrl doesn't have an ending forward slash\nif (config.siteUrl.substr(-1) === \"/\")\n  config.siteUrl = config.siteUrl.slice(0, -1);\n\n// Make sure siteRss has a starting forward slash\nif (config.siteRss && config.siteRss[0] !== \"/\")\n  config.siteRss = `/${config.siteRss}`;\n\nmodule.exports = config;\n","import React, { useState } from \"react\";\r\nimport { Menu, Icon, Header as Ha } from \"semantic-ui-react\";\r\nimport { Link } from \"gatsby\";\r\nimport headerStyles from \"./Header.module.css\";\r\n\r\nconst Header = ({ pathname }) => {\r\n  // eslint-disable-next-line react/destructuring-assignment\r\n  const [activeItem] = useState(pathname);\r\n  return (\r\n    <Menu secondary pointing>\r\n      <Menu.Item active={activeItem === \"/\"} as={Link} to=\"/\">\r\n        Home\r\n      </Menu.Item>\r\n      <Menu.Menu position=\"right\">\r\n        <Menu.Item active={activeItem === \"/about\"} as={Link} to=\"/about\">\r\n          About\r\n        </Menu.Item>\r\n        <Menu.Item active={activeItem === \"/notes\"} as={Link} to=\"/notes\">\r\n          <Icon name=\"book\" color=\"blue\" /> \r\n          Notes\r\n        </Menu.Item>\r\n      </Menu.Menu>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\nimport {\n  Container,\n  Divider,\n  Grid,\n  Header,\n  Placeholder,\n  // Icon,\n  Image,\n  Input,\n  Menu,\n  Segment\n} from \"semantic-ui-react\";\nimport \"semantic-ui-css/semantic.css\";\nimport \"./index.css\";\nimport Helmet from \"react-helmet\";\nimport config from \"../../data/SiteConfig\";\nimport HeaderTemp from \"../components/Header/Header\";\n// import containerStyles from \"./layout.module.css\";\n\nconst MainLayout = ({ children, pathname }) => {\n  return (\n    <>\n      <Helmet>\n        <meta name=\"description\" content={config.siteDescription} />\n      </Helmet>\n      <Grid container celled>\n        <Grid.Row>\n          <Grid.Column width={16}>\n            <HeaderTemp pathname={pathname} />\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          {children}\n      <div style={{height: 3000}} />\n        </Grid.Row>\n      </Grid>\n    </>\n  );\n};\n\nexport default MainLayout;\n","(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();\n  else if (typeof define === 'function' && define.amd) define(definition);\n  else context[name] = definition();\n})('urljoin', this, function () {\n\n  function normalize (strArray) {\n    var resultArray = [];\n\n    // If the first part is a plain protocol, we combine it with the next part.\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    }\n\n    // There must be two or three slashes in the file protocol, two slashes in anything else.\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n\n      if (component === '') { continue; }\n\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n\n      resultArray.push(component);\n\n    }\n\n    var str = resultArray.join('/');\n    // Each input component is now separated by a single slash except the possible first plain protocol part.\n\n    // remove trailing slash before parameters or hash\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n    // replace ? in parameters with &\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?': '') + parts.join('&');\n\n    return str;\n  }\n\n  return function () {\n    var input;\n\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n\n    return normalize(input);\n  };\n\n});\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nclass PostListing extends React.Component {\n  getPostList() {\n    const postList = [];\n    this.props.postEdges.forEach(postEdge => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.fields.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead\n      });\n    });\n    return postList;\n  }\n  render() {\n    const postList = this.getPostList();\n    return (\n      <div>\n        {/* Your post list here. */\n        postList.map(post => (\n          <Link to={post.path} key={post.title}>\n            <h1>{post.title}</h1>\n          </Link>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default PostListing;\n","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let description;\n    let image;\n    let postURL;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      ({ title } = postMeta);\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n      image = postMeta.cover;\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n\n    image = urljoin(config.siteUrl, config.pathPrefix, image);\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\n      }\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push(\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image\n              }\n            }\n          ]\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image\n          },\n          description\n        }\n      );\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : \"\"}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;\n"],"sourceRoot":""}