{"version":3,"sources":["webpack:///./src/templates/tag.jsx","webpack:///./data/SiteConfig.js","webpack:///./src/components/Header/Header.jsx","webpack:///./src/layout/index.jsx","webpack:///./src/components/PostListing/PostListing.jsx"],"names":["TagTemplate","render","tag","this","props","pageContext","postEdges","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_3__","className","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","title","config","siteTitle","_components_PostListing_PostListing__WEBPACK_IMPORTED_MODULE_4__","React","Component","pageQuery","siteTitleShort","siteTitleAlt","siteLogo","siteUrl","pathPrefix","siteDescription","siteRss","siteFBAppID","googleAnalyticsID","disqusShortname","postDefaultCategoryID","dateFromFormat","dateFormat","userName","userEmail","userTwitter","userLocation","userAvatar","userDescription","userLinks","label","url","iconClassName","copyright","themeColor","backgroundColor","replace","substr","slice","module","exports","Header","_ref","pathname","activeItem","useState","react_default","Menu","secondary","pointing","Item","active","as","Link","to","position","Icon","name","color","MainLayout","children","Fragment","Helmet_default","content","Grid","container","celled","Row","Column","width","components_Header_Header","style","height","PostListing","getPostList","postList","forEach","postEdge","push","path","node","fields","slug","tags","frontmatter","cover","date","excerpt","timeToRead","map","post","gatsby__WEBPACK_IMPORTED_MODULE_2__","key"],"mappings":"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","file":"component---src-templates-tag-jsx-56449b284091a947b782.js","sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport config from \"../../data/SiteConfig\";\n\nexport default class TagTemplate extends React.Component {\n  render() {\n    const { tag } = this.props.pageContext;\n    const postEdges = this.props.data.allMarkdownRemark.edges;\n    return (\n      <Layout>\n        <div className=\"tag-container\">\n          <Helmet title={`Posts tagged as \"${tag}\" | ${config.siteTitle}`} />\n          <PostListing postEdges={postEdges} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query TagPage($tag: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [fields___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n","const config = {\n  siteTitle: \"Gatsby Advanced Starter\", // Site title.\n  siteTitleShort: \"GA Starter\", // Short site title for homescreen (PWA). Preferably should be under 12 characters to prevent truncation.\n  siteTitleAlt: \"GatsbyJS Advanced Starter\", // Alternative site title for SEO.\n  siteLogo: \"/logos/logo-1024.png\", // Logo used for SEO and manifest.\n  siteUrl: \"https://vagr9k.github.io\", // Domain of your website without pathPrefix.\n  pathPrefix: \"/gatsby-advanced-starter\", // Prefixes all links. For cases when deployed to example.github.io/gatsby-advanced-starter/.\n  siteDescription: \"A GatsbyJS stater with Advanced design in mind.\", // Website description used for RSS feeds/meta description tag.\n  siteRss: \"/rss.xml\", // Path to the RSS file.\n  siteFBAppID: \"1825356251115265\", // FB Application ID for using app insights\n  googleAnalyticsID: \"UA-47311644-5\", // GA tracking ID.\n  disqusShortname: \"https-vagr9k-github-io-gatsby-advanced-starter\", // Disqus shortname.\n  postDefaultCategoryID: \"Tech\", // Default category for posts.\n  dateFromFormat: \"YYYY-MM-DD\", // Date format used in the frontmatter.\n  dateFormat: \"DD/MM/YYYY\", // Date format for display.\n  userName: \"Advanced User\", // Username to display in the author segment.\n  userEmail: \"AdvancedUser@example.com\", // Email used for RSS feed's author segment\n  userTwitter: \"\", // Optionally renders \"Follow Me\" in the UserInfo segment.\n  userLocation: \"North Pole, Earth\", // User location to display in the author segment.\n  userAvatar: \"https://api.adorable.io/avatars/150/test.png\", // User avatar to display in the author segment.\n  userDescription:\n    \"Yeah, I like animals better than people sometimes... Especially dogs. Dogs are the best. Every time you come home, they act like they haven't seen you in a year. And the good thing about dogs... is they got different dogs for different people.\", // User description to display in the author segment.\n  // Links to social profiles/projects you want to display in the author segment/navigation bar.\n  userLinks: [\n    {\n      label: \"GitHub\",\n      url: \"https://github.com/Vagr9K/gatsby-advanced-starter\",\n      iconClassName: \"fa fa-github\"\n    },\n    {\n      label: \"Twitter\",\n      url: \"https://twitter.com/Vagr9K\",\n      iconClassName: \"fa fa-twitter\"\n    },\n    {\n      label: \"Email\",\n      url: \"mailto:vagr9k@gmail.com\",\n      iconClassName: \"fa fa-envelope\"\n    }\n  ],\n  copyright: \"Copyright Â© 2019. Advanced User\", // Copyright string for the footer of the website and RSS feed.\n  themeColor: \"#c62828\", // Used for setting manifest and progress theme colors.\n  backgroundColor: \"#e0e0e0\" // Used for setting manifest background color.\n};\n\n// Validate\n\n// Make sure pathPrefix is empty if not needed\nif (config.pathPrefix === \"/\") {\n  config.pathPrefix = \"\";\n} else {\n  // Make sure pathPrefix only contains the first forward slash\n  config.pathPrefix = `/${config.pathPrefix.replace(/^\\/|\\/$/g, \"\")}`;\n}\n\n// Make sure siteUrl doesn't have an ending forward slash\nif (config.siteUrl.substr(-1) === \"/\")\n  config.siteUrl = config.siteUrl.slice(0, -1);\n\n// Make sure siteRss has a starting forward slash\nif (config.siteRss && config.siteRss[0] !== \"/\")\n  config.siteRss = `/${config.siteRss}`;\n\nmodule.exports = config;\n","import React, { useState } from \"react\";\r\nimport { Menu, Icon, Header as Ha } from \"semantic-ui-react\";\r\nimport { Link } from \"gatsby\";\r\nimport headerStyles from \"./Header.module.css\";\r\n\r\nconst Header = ({ pathname }) => {\r\n  // eslint-disable-next-line react/destructuring-assignment\r\n  const [activeItem] = useState(pathname);\r\n  return (\r\n    <Menu secondary pointing>\r\n      <Menu.Item active={activeItem === \"/\"} as={Link} to=\"/\">\r\n        Home\r\n      </Menu.Item>\r\n      <Menu.Menu position=\"right\">\r\n        <Menu.Item active={activeItem === \"/about\"} as={Link} to=\"/about\">\r\n          About\r\n        </Menu.Item>\r\n        <Menu.Item active={activeItem === \"/notes\"} as={Link} to=\"/notes\">\r\n          <Icon name=\"book\" color=\"blue\" /> \r\n          Notes\r\n        </Menu.Item>\r\n      </Menu.Menu>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\nimport {\n  Container,\n  Divider,\n  Grid,\n  Header,\n  Placeholder,\n  // Icon,\n  Image,\n  Input,\n  Menu,\n  Segment\n} from \"semantic-ui-react\";\nimport \"semantic-ui-css/semantic.css\";\nimport \"./index.css\";\nimport Helmet from \"react-helmet\";\nimport config from \"../../data/SiteConfig\";\nimport HeaderTemp from \"../components/Header/Header\";\n// import containerStyles from \"./layout.module.css\";\n\nconst MainLayout = ({ children, pathname }) => {\n  return (\n    <>\n      <Helmet>\n        <meta name=\"description\" content={config.siteDescription} />\n      </Helmet>\n      <Grid container celled>\n        <Grid.Row>\n          <Grid.Column width={16}>\n            <HeaderTemp pathname={pathname} />\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          {children}\n      <div style={{height: 3000}} />\n        </Grid.Row>\n      </Grid>\n    </>\n  );\n};\n\nexport default MainLayout;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nclass PostListing extends React.Component {\n  getPostList() {\n    const postList = [];\n    this.props.postEdges.forEach(postEdge => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.fields.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead\n      });\n    });\n    return postList;\n  }\n  render() {\n    const postList = this.getPostList();\n    return (\n      <div>\n        {/* Your post list here. */\n        postList.map(post => (\n          <Link to={post.path} key={post.title}>\n            <h1>{post.title}</h1>\n          </Link>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default PostListing;\n"],"sourceRoot":""}